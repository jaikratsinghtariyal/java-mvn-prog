/**
* {{#description}}{{.}}{{/description}}{{^description}}{{classname}}{{/description}}
*/{{#description}}
    @ApiModel(description = "{{{description}}}"){{/description}}

{{#notNullJacksonAnnotation}}
    @JsonInclude(JsonInclude.Include.NON_NULL)
{{/notNullJacksonAnnotation}}
{{#ignoreUnknownJacksonAnnotation}}
    @JsonIgnoreProperties(ignoreUnknown = true)
{{/ignoreUnknownJacksonAnnotation}}

{{#dbClient}}
@Entity
{{/dbClient}}
public class {{classname}} {{#parent}}extends {{{parent}}} {{/parent}}{{#parcelableModel}}implements Parcelable {{#serializableModel}}, Serializable {{/serializableModel}}{{/parcelableModel}}{{^parcelableModel}}{{#serializableModel}}implements Serializable {{/serializableModel}}{{/parcelableModel}}{
{{#serializableModel}}
    private static final long serialVersionUID = 1L;

{{/serializableModel}}
{{#dbClient}}
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    private Integer id;
{{/dbClient}}
{{#vars}}
    {{#isEnum}}
        {{^isContainer}}
            {{>modelInnerEnum}}
        {{/isContainer}}
    {{/isEnum}}
    {{#items.isEnum}}
        {{#items}}
            {{^isContainer}}
                {{>modelInnerEnum}}
            {{/isContainer}}
        {{/items}}
    {{/items.isEnum}}

    {{#gson}}
        @SerializedName("{{baseName}}")
    {{/gson}}
    {{#isContainer}}
        private {{{datatypeWithEnum}}} {{name}}{{#required}} = {{{defaultValue}}}{{/required}}{{^required}} = null{{/required}};
    {{/isContainer}}
    {{^isContainer}}
        private {{{datatypeWithEnum}}} {{name}};
    {{/isContainer}}

{{/vars}}
{{#parcelableModel}}
    public {{classname}}() {
    {{#parent}}
        super();
    {{/parent}}
    {{#gson}}
        {{#discriminator}}
            {{^vendorExtensions.x-discriminator-is-enum}}
                this.{{discriminatorClassVarName}} = this.getClass().getSimpleName();
            {{/vendorExtensions.x-discriminator-is-enum}}
        {{/discriminator}}
    {{/gson}}
    }
{{/parcelableModel}}
{{^parcelableModel}}
    {{#gson}}
        {{#discriminator}}
            {{^vendorExtensions.x-discriminator-is-enum}}
                public {{classname}}() {
                this.{{discriminatorClassVarName}} = this.getClass().getSimpleName();
                }
            {{/vendorExtensions.x-discriminator-is-enum}}
        {{/discriminator}}
    {{/gson}}
{{/parcelableModel}}
{{#vars}}
    {{^isReadOnly}}

        {{#isListContainer}}

            public {{classname}} add{{nameInCamelCase}}Item({{{items.datatypeWithEnum}}} {{name}}Item) {
            {{^required}}
                if (this.{{name}} == null) {
                this.{{name}} = {{{defaultValue}}};
                }
            {{/required}}
            this.{{name}}.add({{name}}Item);
            return this;
            }
        {{/isListContainer}}
        {{#isMapContainer}}

            public {{classname}} put{{nameInCamelCase}}Item(String key, {{{items.datatypeWithEnum}}} {{name}}Item) {
            {{^required}}
                if (this.{{name}} == null) {
                this.{{name}} = {{{defaultValue}}};
                }
            {{/required}}
            this.{{name}}.put(key, {{name}}Item);
            return this;
            }
        {{/isMapContainer}}

    {{/isReadOnly}}
    /**
    {{#description}}
        * {{description}}
    {{/description}}
    {{^description}}
        * Get {{name}}
    {{/description}}
    {{#minimum}}
        * minimum: {{minimum}}
    {{/minimum}}
    {{#maximum}}
        * maximum: {{maximum}}
    {{/maximum}}
    * @return {{name}}
    **/
    {{#useBeanValidation}}{{>beanValidation}}{{/useBeanValidation}}
    {{#vendorExtensions.extraAnnotation}}
        {{{vendorExtensions.extraAnnotation}}}
    {{/vendorExtensions.extraAnnotation}}
    public {{{datatypeWithEnum}}} {{#isBoolean}}is{{/isBoolean}}{{getter}}() {
    return {{name}};
    }
    {{^isReadOnly}}

        public void {{setter}}({{{datatypeWithEnum}}} {{name}}) {
        this.{{name}} = {{name}};
        }
    {{/isReadOnly}}

{{/vars}}

}
